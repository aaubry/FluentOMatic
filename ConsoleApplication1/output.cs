//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kebas
{
	using System;
	
	
	public interface _SyntaxEnd
	{
	}
	
	public interface OsdBuilderSyntax
	{
		
		OpenSearchProjectSyntax OpenSearchProject(Func<OpenSearchProjectInnerSyntax, _SyntaxEnd> inner);
	}
	
	public sealed class _OsdBuilderSyntax : OsdBuilderSyntax
	{
		
		private _OpenSearchProjectSyntax _OpenSearchProject;
		
		public _OsdBuilderSyntax()
		{
		}
		
		public System.Collections.Generic.IEnumerable<_OpenSearchProjectSyntax> OpenSearchProject
		{
			get
			{
				return this._OpenSearchProject;
			}
		}
		
		OpenSearchProjectSyntax OsdBuilderSyntax.OpenSearchProject(Func<OpenSearchProjectInnerSyntax, _SyntaxEnd> inner)
		{
			this._OpenSearchProject = new _OpenSearchProjectSyntax(inner);
			return this._OpenSearchProject;
		}
	}
	
	public interface OpenSearchProjectSyntax
	{
		
		OpenSearchProjectSyntax OpenSearchProject(Func<OpenSearchProjectInnerSyntax, _SyntaxEnd> inner);
	}
	
	public sealed class _OpenSearchProjectSyntax : OpenSearchProjectSyntax, System.Collections.Generic.IEnumerable<_OpenSearchProjectSyntax>
	{
		
		public _OpenSearchProjectInnerSyntax inner;
		
		private _OpenSearchProjectSyntax _OpenSearchProject;
		
		public _OpenSearchProjectSyntax(Func<OpenSearchProjectInnerSyntax, _SyntaxEnd> inner)
		{
			this.inner = new _OpenSearchProjectInnerSyntax();
			inner(this.inner);
		}
		
		public System.Collections.Generic.IEnumerable<_OpenSearchProjectSyntax> OpenSearchProject
		{
			get
			{
				return this._OpenSearchProject;
			}
		}
		
		System.Collections.Generic.IEnumerator<_OpenSearchProjectSyntax> System.Collections.Generic.IEnumerable<_OpenSearchProjectSyntax>.GetEnumerator()
		{
			for (_OpenSearchProjectSyntax current = this; (current != null); current = current._OpenSearchProject)
			{
				yield return current;
			}
		}
		
		System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return ((System.Collections.Generic.IEnumerable<_OpenSearchProjectSyntax>)(this)).GetEnumerator();
		}
		
		OpenSearchProjectSyntax OpenSearchProjectSyntax.OpenSearchProject(Func<OpenSearchProjectInnerSyntax, _SyntaxEnd> inner)
		{
			this._OpenSearchProject = new _OpenSearchProjectSyntax(inner);
			return this._OpenSearchProject;
		}
	}
	
	public interface OpenSearchProjectInnerSyntax
	{
		
		NamedSyntax Named(String name);
	}
	
	public sealed class _OpenSearchProjectInnerSyntax : OpenSearchProjectInnerSyntax
	{
		
		public _NamedSyntax Named;
		
		public _OpenSearchProjectInnerSyntax()
		{
		}
		
		NamedSyntax OpenSearchProjectInnerSyntax.Named(String name)
		{
			this.Named = new _NamedSyntax(name);
			return this.Named;
		}
	}
	
	public interface NamedSyntax : _SyntaxEnd
	{
		
		DescribedSyntax Described(String lang, String description);
		
		WithUrlSyntax WithUrl(Func<WithUrlInnerSyntax, _SyntaxEnd> inner);
		
		WithQueryUrlSyntax WithQueryUrl(Func<WithQueryUrlInnerSyntax, _SyntaxEnd> inner);
	}
	
	public sealed class _NamedSyntax : NamedSyntax
	{
		
		public String name;
		
		private _DescribedSyntax _Described;
		
		private _WithUrlSyntax _WithUrl;
		
		private _WithQueryUrlSyntax _WithQueryUrl;
		
		public _NamedSyntax(String name)
		{
			this.name = name;
		}
		
		public System.Collections.Generic.IEnumerable<_DescribedSyntax> Described
		{
			get
			{
				return this._Described;
			}
		}
		
		public System.Collections.Generic.IEnumerable<_WithUrlSyntax> WithUrl
		{
			get
			{
				return this._WithUrl;
			}
		}
		
		public System.Collections.Generic.IEnumerable<_WithQueryUrlSyntax> WithQueryUrl
		{
			get
			{
				return this._WithQueryUrl;
			}
		}
		
		DescribedSyntax NamedSyntax.Described(String lang, String description)
		{
			this._Described = new _DescribedSyntax(lang, description);
			return this._Described;
		}
		
		WithUrlSyntax NamedSyntax.WithUrl(Func<WithUrlInnerSyntax, _SyntaxEnd> inner)
		{
			this._WithUrl = new _WithUrlSyntax(inner);
			return this._WithUrl;
		}
		
		WithQueryUrlSyntax NamedSyntax.WithQueryUrl(Func<WithQueryUrlInnerSyntax, _SyntaxEnd> inner)
		{
			this._WithQueryUrl = new _WithQueryUrlSyntax(inner);
			return this._WithQueryUrl;
		}
	}
	
	public interface DescribedSyntax : _SyntaxEnd
	{
		
		DescribedSyntax Described(String lang, String description);
		
		WithUrlSyntax WithUrl(Func<WithUrlInnerSyntax, _SyntaxEnd> inner);
		
		WithQueryUrlSyntax WithQueryUrl(Func<WithQueryUrlInnerSyntax, _SyntaxEnd> inner);
	}
	
	public sealed class _DescribedSyntax : DescribedSyntax, System.Collections.Generic.IEnumerable<_DescribedSyntax>
	{
		
		public String lang;
		
		public String description;
		
		private _DescribedSyntax _Described;
		
		private _WithUrlSyntax _WithUrl;
		
		private _WithQueryUrlSyntax _WithQueryUrl;
		
		public _DescribedSyntax(String lang, String description)
		{
			this.lang = lang;
			this.description = description;
		}
		
		public System.Collections.Generic.IEnumerable<_DescribedSyntax> Described
		{
			get
			{
				return this._Described;
			}
		}
		
		public System.Collections.Generic.IEnumerable<_WithUrlSyntax> WithUrl
		{
			get
			{
				return this._WithUrl;
			}
		}
		
		public System.Collections.Generic.IEnumerable<_WithQueryUrlSyntax> WithQueryUrl
		{
			get
			{
				return this._WithQueryUrl;
			}
		}
		
		System.Collections.Generic.IEnumerator<_DescribedSyntax> System.Collections.Generic.IEnumerable<_DescribedSyntax>.GetEnumerator()
		{
			for (_DescribedSyntax current = this; (current != null); current = current._Described)
			{
				yield return current;
			}
		}
		
		System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return ((System.Collections.Generic.IEnumerable<_DescribedSyntax>)(this)).GetEnumerator();
		}
		
		DescribedSyntax DescribedSyntax.Described(String lang, String description)
		{
			this._Described = new _DescribedSyntax(lang, description);
			return this._Described;
		}
		
		WithUrlSyntax DescribedSyntax.WithUrl(Func<WithUrlInnerSyntax, _SyntaxEnd> inner)
		{
			this._WithUrl = new _WithUrlSyntax(inner);
			return this._WithUrl;
		}
		
		WithQueryUrlSyntax DescribedSyntax.WithQueryUrl(Func<WithQueryUrlInnerSyntax, _SyntaxEnd> inner)
		{
			this._WithQueryUrl = new _WithQueryUrlSyntax(inner);
			return this._WithQueryUrl;
		}
	}
	
	public interface WithUrlSyntax : _SyntaxEnd
	{
		
		WithUrlSyntax WithUrl(Func<WithUrlInnerSyntax, _SyntaxEnd> inner);
		
		WithQueryUrlSyntax WithQueryUrl(Func<WithQueryUrlInnerSyntax, _SyntaxEnd> inner);
	}
	
	public sealed class _WithUrlSyntax : WithUrlSyntax, System.Collections.Generic.IEnumerable<_WithUrlSyntax>
	{
		
		public _WithUrlInnerSyntax inner;
		
		private _WithUrlSyntax _WithUrl;
		
		private _WithQueryUrlSyntax _WithQueryUrl;
		
		public _WithUrlSyntax(Func<WithUrlInnerSyntax, _SyntaxEnd> inner)
		{
			this.inner = new _WithUrlInnerSyntax();
			inner(this.inner);
		}
		
		public System.Collections.Generic.IEnumerable<_WithUrlSyntax> WithUrl
		{
			get
			{
				return this._WithUrl;
			}
		}
		
		public System.Collections.Generic.IEnumerable<_WithQueryUrlSyntax> WithQueryUrl
		{
			get
			{
				return this._WithQueryUrl;
			}
		}
		
		System.Collections.Generic.IEnumerator<_WithUrlSyntax> System.Collections.Generic.IEnumerable<_WithUrlSyntax>.GetEnumerator()
		{
			for (_WithUrlSyntax current = this; (current != null); current = current._WithUrl)
			{
				yield return current;
			}
		}
		
		System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return ((System.Collections.Generic.IEnumerable<_WithUrlSyntax>)(this)).GetEnumerator();
		}
		
		WithUrlSyntax WithUrlSyntax.WithUrl(Func<WithUrlInnerSyntax, _SyntaxEnd> inner)
		{
			this._WithUrl = new _WithUrlSyntax(inner);
			return this._WithUrl;
		}
		
		WithQueryUrlSyntax WithUrlSyntax.WithQueryUrl(Func<WithQueryUrlInnerSyntax, _SyntaxEnd> inner)
		{
			this._WithQueryUrl = new _WithQueryUrlSyntax(inner);
			return this._WithQueryUrl;
		}
	}
	
	public interface WithUrlInnerSyntax
	{
		
		Named1Syntax Named(String scheme);
	}
	
	public sealed class _WithUrlInnerSyntax : WithUrlInnerSyntax
	{
		
		public _Named1Syntax Named;
		
		public _WithUrlInnerSyntax()
		{
		}
		
		Named1Syntax WithUrlInnerSyntax.Named(String scheme)
		{
			this.Named = new _Named1Syntax(scheme);
			return this.Named;
		}
	}
	
	public interface Named1Syntax
	{
		
		TemplateSyntax Template(String template);
	}
	
	public sealed class _Named1Syntax : Named1Syntax
	{
		
		public String scheme;
		
		public _TemplateSyntax Template;
		
		public _Named1Syntax(String scheme)
		{
			this.scheme = scheme;
		}
		
		TemplateSyntax Named1Syntax.Template(String template)
		{
			this.Template = new _TemplateSyntax(template);
			return this.Template;
		}
	}
	
	public interface TemplateSyntax : _SyntaxEnd
	{
		
		DiscoverableSyntax Discoverable();
		
		Described1Syntax Described(String lang, String description);
	}
	
	public sealed class _TemplateSyntax : TemplateSyntax
	{
		
		public String template;
		
		public _DiscoverableSyntax Discoverable;
		
		private _Described1Syntax _Described;
		
		public _TemplateSyntax(String template)
		{
			this.template = template;
		}
		
		public System.Collections.Generic.IEnumerable<_Described1Syntax> Described
		{
			get
			{
				return this._Described;
			}
		}
		
		DiscoverableSyntax TemplateSyntax.Discoverable()
		{
			this.Discoverable = new _DiscoverableSyntax();
			return this.Discoverable;
		}
		
		Described1Syntax TemplateSyntax.Described(String lang, String description)
		{
			this._Described = new _Described1Syntax(lang, description);
			return this._Described;
		}
	}
	
	public interface DiscoverableSyntax : _SyntaxEnd
	{
		
		Described1Syntax Described(String lang, String description);
	}
	
	public sealed class _DiscoverableSyntax : DiscoverableSyntax
	{
		
		private _Described1Syntax _Described;
		
		public _DiscoverableSyntax()
		{
		}
		
		public System.Collections.Generic.IEnumerable<_Described1Syntax> Described
		{
			get
			{
				return this._Described;
			}
		}
		
		Described1Syntax DiscoverableSyntax.Described(String lang, String description)
		{
			this._Described = new _Described1Syntax(lang, description);
			return this._Described;
		}
	}
	
	public interface Described1Syntax : _SyntaxEnd
	{
		
		Described1Syntax Described(String lang, String description);
	}
	
	public sealed class _Described1Syntax : Described1Syntax, System.Collections.Generic.IEnumerable<_Described1Syntax>
	{
		
		public String lang;
		
		public String description;
		
		private _Described1Syntax _Described;
		
		public _Described1Syntax(String lang, String description)
		{
			this.lang = lang;
			this.description = description;
		}
		
		public System.Collections.Generic.IEnumerable<_Described1Syntax> Described
		{
			get
			{
				return this._Described;
			}
		}
		
		System.Collections.Generic.IEnumerator<_Described1Syntax> System.Collections.Generic.IEnumerable<_Described1Syntax>.GetEnumerator()
		{
			for (_Described1Syntax current = this; (current != null); current = current._Described)
			{
				yield return current;
			}
		}
		
		System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return ((System.Collections.Generic.IEnumerable<_Described1Syntax>)(this)).GetEnumerator();
		}
		
		Described1Syntax Described1Syntax.Described(String lang, String description)
		{
			this._Described = new _Described1Syntax(lang, description);
			return this._Described;
		}
	}
	
	public interface WithQueryUrlSyntax : _SyntaxEnd
	{
		
		WithQueryUrlSyntax WithQueryUrl(Func<WithQueryUrlInnerSyntax, _SyntaxEnd> inner);
	}
	
	public sealed class _WithQueryUrlSyntax : WithQueryUrlSyntax, System.Collections.Generic.IEnumerable<_WithQueryUrlSyntax>
	{
		
		public _WithQueryUrlInnerSyntax inner;
		
		private _WithQueryUrlSyntax _WithQueryUrl;
		
		public _WithQueryUrlSyntax(Func<WithQueryUrlInnerSyntax, _SyntaxEnd> inner)
		{
			this.inner = new _WithQueryUrlInnerSyntax();
			inner(this.inner);
		}
		
		public System.Collections.Generic.IEnumerable<_WithQueryUrlSyntax> WithQueryUrl
		{
			get
			{
				return this._WithQueryUrl;
			}
		}
		
		System.Collections.Generic.IEnumerator<_WithQueryUrlSyntax> System.Collections.Generic.IEnumerable<_WithQueryUrlSyntax>.GetEnumerator()
		{
			for (_WithQueryUrlSyntax current = this; (current != null); current = current._WithQueryUrl)
			{
				yield return current;
			}
		}
		
		System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return ((System.Collections.Generic.IEnumerable<_WithQueryUrlSyntax>)(this)).GetEnumerator();
		}
		
		WithQueryUrlSyntax WithQueryUrlSyntax.WithQueryUrl(Func<WithQueryUrlInnerSyntax, _SyntaxEnd> inner)
		{
			this._WithQueryUrl = new _WithQueryUrlSyntax(inner);
			return this._WithQueryUrl;
		}
	}
	
	public interface WithQueryUrlInnerSyntax
	{
		
		SchemeSyntax Scheme(String scheme);
	}
	
	public sealed class _WithQueryUrlInnerSyntax : WithQueryUrlInnerSyntax
	{
		
		public _SchemeSyntax Scheme;
		
		public _WithQueryUrlInnerSyntax()
		{
		}
		
		SchemeSyntax WithQueryUrlInnerSyntax.Scheme(String scheme)
		{
			this.Scheme = new _SchemeSyntax(scheme);
			return this.Scheme;
		}
	}
	
	public interface SchemeSyntax
	{
		
		Template1Syntax Template(String template);
	}
	
	public sealed class _SchemeSyntax : SchemeSyntax
	{
		
		public String scheme;
		
		public _Template1Syntax Template;
		
		public _SchemeSyntax(String scheme)
		{
			this.scheme = scheme;
		}
		
		Template1Syntax SchemeSyntax.Template(String template)
		{
			this.Template = new _Template1Syntax(template);
			return this.Template;
		}
	}
	
	public interface Template1Syntax : _SyntaxEnd
	{
		
		Discoverable1Syntax Discoverable();
		
		Described2Syntax Described(String lang, String description);
	}
	
	public sealed class _Template1Syntax : Template1Syntax
	{
		
		public String template;
		
		public _Discoverable1Syntax Discoverable;
		
		private _Described2Syntax _Described;
		
		public _Template1Syntax(String template)
		{
			this.template = template;
		}
		
		public System.Collections.Generic.IEnumerable<_Described2Syntax> Described
		{
			get
			{
				return this._Described;
			}
		}
		
		Discoverable1Syntax Template1Syntax.Discoverable()
		{
			this.Discoverable = new _Discoverable1Syntax();
			return this.Discoverable;
		}
		
		Described2Syntax Template1Syntax.Described(String lang, String description)
		{
			this._Described = new _Described2Syntax(lang, description);
			return this._Described;
		}
	}
	
	public interface Discoverable1Syntax : _SyntaxEnd
	{
		
		Described2Syntax Described(String lang, String description);
	}
	
	public sealed class _Discoverable1Syntax : Discoverable1Syntax
	{
		
		private _Described2Syntax _Described;
		
		public _Discoverable1Syntax()
		{
		}
		
		public System.Collections.Generic.IEnumerable<_Described2Syntax> Described
		{
			get
			{
				return this._Described;
			}
		}
		
		Described2Syntax Discoverable1Syntax.Described(String lang, String description)
		{
			this._Described = new _Described2Syntax(lang, description);
			return this._Described;
		}
	}
	
	public interface Described2Syntax : _SyntaxEnd
	{
		
		Described2Syntax Described(String lang, String description);
	}
	
	public sealed class _Described2Syntax : Described2Syntax, System.Collections.Generic.IEnumerable<_Described2Syntax>
	{
		
		public String lang;
		
		public String description;
		
		private _Described2Syntax _Described;
		
		public _Described2Syntax(String lang, String description)
		{
			this.lang = lang;
			this.description = description;
		}
		
		public System.Collections.Generic.IEnumerable<_Described2Syntax> Described
		{
			get
			{
				return this._Described;
			}
		}
		
		System.Collections.Generic.IEnumerator<_Described2Syntax> System.Collections.Generic.IEnumerable<_Described2Syntax>.GetEnumerator()
		{
			for (_Described2Syntax current = this; (current != null); current = current._Described)
			{
				yield return current;
			}
		}
		
		System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return ((System.Collections.Generic.IEnumerable<_Described2Syntax>)(this)).GetEnumerator();
		}
		
		Described2Syntax Described2Syntax.Described(String lang, String description)
		{
			this._Described = new _Described2Syntax(lang, description);
			return this._Described;
		}
	}
}
